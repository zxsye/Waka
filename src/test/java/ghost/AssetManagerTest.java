/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ghost;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.*;
import processing.core.*;

import java.io.*;
import java.util.*;


class AssetManagerTest {
    private App app;
    private AssetManager m;

    @BeforeEach
    public void before() {
        app = new App();
        PApplet.runSketch(new String[] {""}, app);
        app.noLoop();
        app.setup();

        this.m = app.getManager();
    }

    @Test
    public void simpleTest() {
        assertFalse(m.isGameOver());
        assertEquals(0, m.draw()); // normal drawing
    }


    @Test
    public void deathScreen() {
        // Kill waka
        m.death();
        assertTrue(m.isGameOver());
        assertEquals(-1, m.draw()); // draw death screen

        // Trying to move during death screen
        assertFalse(m.userInput((char) 65535, App.UP));
    }

    @Test
    public void userInput() {
        assertTrue(m.userInput( (char) 65535, App.UP));
        assertTrue(m.userInput( (char) 65535, App.DOWN));
        assertTrue(m.userInput( (char) 65535, App.LEFT));
        assertTrue(m.userInput( (char) 65535, App.RIGHT));
        assertTrue(m.userInput( (char) 65535, ' ')); // debugging
    }

    @Test
    public void winning() {
        // CHeck win
        m.win();
        assertEquals(1, m.draw());
    }

    @Test
    public void debugMode() {
        // Check mode changes
        assertFalse(m.isDebug());
        m.userInput( (char) 65535, ' ');
        assertTrue(m.isDebug());

        // Check mode changes back
        m.userInput( (char) 65535, ' ');
        assertFalse(m.isDebug());

    }

}
